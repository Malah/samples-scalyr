{
  tabs: [{"tabName":"Analytics",
graphs : [
    {
      query: "'Okta' \n| group count = count () by outcome.result\n| sort -count\n\n",
      title: "Results ",
      graphStyle: "pie",
      maxPieSlices: 10,
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 29
}
    },
    {
      query: "'Okta' \n| group count = count () by client.geographicalContext.country\n| sort -count\n\n",
      title: "Requests by Country",
      graphStyle: "pie",
      maxPieSlices: 10,
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 0
}
    },
    {
      graphStyle: "pie",
      maxPieSlices: 10,
      query: "'Okta' \n| group count = count () by client.userAgent.browser\n| sort -count\n\n",
      title: "Requests by Browser",
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 14
}
    },
    {
      graphStyle: "pie",
      maxPieSlices: 10,
      query: "'Okta' \n| group count = count () by client.userAgent.os\n| sort -count\n\n",
      title: "Requests by Operating System",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 14
}
    },
    {
      graphStyle: "donut",
      layout: {
  h: 14,
  w: 20,
  x: 40,
  y: 0
},
      maxPieSlices: 10,
      query: "'Okta'  \n authenticationContext.authenticationProvider= *\n| group count = count () by authenticationContext.authenticationProvider\n| sort -count\n\n",
      title: "Authentication Provider",
      showBarsColumn: "false"
    },
    {
      graphStyle: "stacked_bar",
      query: "'Okta'  outcome.reason = * \n| group count = count () by outcome.reason\n| sort -count\n| limit 10",
      title: "Outcome Reasons",
      xAxis: "grouped_data",
      yScale: "linear",
      layout: {
  h: 14,
  w: 40,
  x: 20,
  y: 28
}
    },
    {
      graphStyle: "donut",
      layout: {
  h: 14,
  w: 20,
  x: 40,
  y: 14
},
      maxPieSlices: 10,
      query: "'Okta'  authenticationContext.credentialType= *\n| group count = count () by authenticationContext.credentialType\n| sort -count\n\n",
      showBarsColumn: "false",
      title: "Credential Types"
    },
    {
      graphStyle: "pie",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 0
},
      maxPieSlices: 10,
      query: "'Okta'  client.device=*\n| group count = count () by client.device\n| sort -count\n\n",
      title: "Requests by Device"
    },
  ],
filters: [
]
},
{"tabName":"Potential Threats","graphs":[
  {
    layout: {
  h: 14,
  w: 30,
  x: 0,
  y: 14
},
    query: "'Okta' outcome.reason = 'LOCKED_OUT' outcome.result = 'FAILURE' \n| group count = count (outcome.result = 'FAILURE') by outcome.reason, actor.displayName, actor.alternateId\n| sort -count\n| filter count > 2\n\n\n",
    title: "Multiple Failed Logins due to LOCKED_OUT",
    graphStyle: "",
    showBarsColumn: "false"
  },
  {
    graphStyle: "",
    layout: {
  h: 14,
  w: 27,
  x: 30,
  y: 14
},
    maxPieSlices: 10,
    query: "'Okta' outcome.reason = 'LOCKED_OUT' \n| group count = count () by client.geographicalContext.country, actor.displayName, actor.alternateId\n| sort -count\n\n",
    showBarsColumn: "false",
    title: "LOCKED OUT Users by Country"
  },
  {
    graphStyle: "",
    layout: {
  h: 14,
  w: 30,
  x: 0,
  y: 0
},
    query: "'Okta' outcome.result = 'SUCCESS' AND client.ipAddress = * AND actor.type = 'User' AND NOT(actor.alternateId contains 'svc') AND NOT(debugContext.debugData.url contains '/api') AND NOT(debugContext.debugData.url contains '/api') AND NOT('/oauth2')\n| group count = estimate_distinct(client.ipAddress) by actor.displayName, actor.alternateId \n| sort -count\n| filter count >= 3\n\n",
    showBarsColumn: "false",
    title: "Authentication Success from 3 or more IPs"
  },
  {
    layout: {
  h: 14,
  w: 27,
  x: 30,
  y: 0
},
    query: "'Okta' client.geographicalContext.country= * outcome.result = 'SUCCESS' actor.type = 'User' \n| group count = estimate_distinct(client.geographicalContext.country) by actor.displayName, actor.alternateId\n| filter count > 1\n",
    title: "Authentication Success from 2 or more countries "
  }
],
filters: [
]
}],
  configType: "TABBED"
 }
