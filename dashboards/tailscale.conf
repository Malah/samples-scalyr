{
  parameters: [
    {
      name: "base_search",
      options: {
        display: "hidden"
      },
      defaultValue: "nodeId = * physicalTraffic = * | let nodeTraffic = array_from_json(physicalTraffic) | let total_rxBytes = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'rxBytes')), 0, func(x,y) -> x+y) | let total_txBytes = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'txBytes')), 0, func(x,y) -> x+y) | let total_rxPackets = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'rxPkts')), 0, func(x,y) -> x+y) | let total_txPackets = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'txPkts')), 0, func(x,y) -> x+y)"
    }
  ],
  graphs: [
    {
      query: "#base_search#\n| group 'Rx MB' = sum(total_rxBytes)/1000000, 'Tx MB' = sum(total_txBytes)/1000000, 'Rx Packets' = sum(total_rxPackets), 'Tx Packets' = sum(total_txPackets)by nodeId",
      title: "Physical Traffic by Node",
      graphStyle: "",
      showBarsColumn: "false",
      layout: {
        h: 14,
        w: 60,
        x: 0,
        y: 5
      },
    }, {
      graphStyle: "number",
      query: "#base_search#\n| group nodes = estimate_distinct(nodeId)",
      title: "Nodes",
      layout: {
        h: 5,
        w: 15,
        x: 0,
        y: 0
      },
    }, {
      graphStyle: "number",
      query: "#base_search#\n| group 'Total MB Received' = sum(total_rxBytes)/1000000",
      title: "Total Rx MB",
      layout: {
        h: 5,
        w: 15,
        x: 15,
        y: 0
      }
    }, {
      graphStyle: "number",
      query: "#base_search#\n| group 'Total MB Received' = sum(total_txBytes)/1000000",
      title: "Total Tx MB",
      layout: {
        h: 5,
        w: 15,
        x: 30,
        y: 0
      }
    }, {
      graphStyle: "number",
      query: "#base_search#\n| group 'Total Packets' = sum(total_rxPackets + total_txPackets)",
      title: "Total Packets (Rx + Tx)",
      layout: {
        h: 5,
        w: 15,
        x: 45,
        y: 0
      }
    }
  ]
}
